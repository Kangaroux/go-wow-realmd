// Code generated by "enumer -type=ClientOpcode,ServerOpcode -output=enumer.go"; DO NOT EDIT.

package realmd

import (
	"fmt"
	"strings"
)

const (
	_ClientOpcodeName_0      = "OpClientCharCreateOpClientCharListOpClientCharDelete"
	_ClientOpcodeLowerName_0 = "opclientcharcreateopclientcharlistopclientchardelete"
	_ClientOpcodeName_1      = "OpClientPlayerLogin"
	_ClientOpcodeLowerName_1 = "opclientplayerlogin"
	_ClientOpcodeName_2      = "OpClientLogout"
	_ClientOpcodeLowerName_2 = "opclientlogout"
	_ClientOpcodeName_3      = "OpClientLogoutCancel"
	_ClientOpcodeLowerName_3 = "opclientlogoutcancel"
	_ClientOpcodeName_4      = "OpClientPing"
	_ClientOpcodeLowerName_4 = "opclientping"
	_ClientOpcodeName_5      = "OpClientAuthSession"
	_ClientOpcodeLowerName_5 = "opclientauthsession"
	_ClientOpcodeName_6      = "OpClientRealmSplit"
	_ClientOpcodeLowerName_6 = "opclientrealmsplit"
	_ClientOpcodeName_7      = "OpClientReadyForAccountDataTimes"
	_ClientOpcodeLowerName_7 = "opclientreadyforaccountdatatimes"
)

var (
	_ClientOpcodeIndex_0 = [...]uint8{0, 18, 34, 52}
	_ClientOpcodeIndex_1 = [...]uint8{0, 19}
	_ClientOpcodeIndex_2 = [...]uint8{0, 14}
	_ClientOpcodeIndex_3 = [...]uint8{0, 20}
	_ClientOpcodeIndex_4 = [...]uint8{0, 12}
	_ClientOpcodeIndex_5 = [...]uint8{0, 19}
	_ClientOpcodeIndex_6 = [...]uint8{0, 18}
	_ClientOpcodeIndex_7 = [...]uint8{0, 32}
)

func (i ClientOpcode) String() string {
	switch {
	case 54 <= i && i <= 56:
		i -= 54
		return _ClientOpcodeName_0[_ClientOpcodeIndex_0[i]:_ClientOpcodeIndex_0[i+1]]
	case i == 61:
		return _ClientOpcodeName_1
	case i == 75:
		return _ClientOpcodeName_2
	case i == 78:
		return _ClientOpcodeName_3
	case i == 476:
		return _ClientOpcodeName_4
	case i == 493:
		return _ClientOpcodeName_5
	case i == 908:
		return _ClientOpcodeName_6
	case i == 1279:
		return _ClientOpcodeName_7
	default:
		return fmt.Sprintf("ClientOpcode(%d)", i)
	}
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ClientOpcodeNoOp() {
	var x [1]struct{}
	_ = x[OpClientCharCreate-(54)]
	_ = x[OpClientCharList-(55)]
	_ = x[OpClientCharDelete-(56)]
	_ = x[OpClientPlayerLogin-(61)]
	_ = x[OpClientLogout-(75)]
	_ = x[OpClientLogoutCancel-(78)]
	_ = x[OpClientPing-(476)]
	_ = x[OpClientAuthSession-(493)]
	_ = x[OpClientRealmSplit-(908)]
	_ = x[OpClientReadyForAccountDataTimes-(1279)]
}

var _ClientOpcodeValues = []ClientOpcode{OpClientCharCreate, OpClientCharList, OpClientCharDelete, OpClientPlayerLogin, OpClientLogout, OpClientLogoutCancel, OpClientPing, OpClientAuthSession, OpClientRealmSplit, OpClientReadyForAccountDataTimes}

var _ClientOpcodeNameToValueMap = map[string]ClientOpcode{
	_ClientOpcodeName_0[0:18]:       OpClientCharCreate,
	_ClientOpcodeLowerName_0[0:18]:  OpClientCharCreate,
	_ClientOpcodeName_0[18:34]:      OpClientCharList,
	_ClientOpcodeLowerName_0[18:34]: OpClientCharList,
	_ClientOpcodeName_0[34:52]:      OpClientCharDelete,
	_ClientOpcodeLowerName_0[34:52]: OpClientCharDelete,
	_ClientOpcodeName_1[0:19]:       OpClientPlayerLogin,
	_ClientOpcodeLowerName_1[0:19]:  OpClientPlayerLogin,
	_ClientOpcodeName_2[0:14]:       OpClientLogout,
	_ClientOpcodeLowerName_2[0:14]:  OpClientLogout,
	_ClientOpcodeName_3[0:20]:       OpClientLogoutCancel,
	_ClientOpcodeLowerName_3[0:20]:  OpClientLogoutCancel,
	_ClientOpcodeName_4[0:12]:       OpClientPing,
	_ClientOpcodeLowerName_4[0:12]:  OpClientPing,
	_ClientOpcodeName_5[0:19]:       OpClientAuthSession,
	_ClientOpcodeLowerName_5[0:19]:  OpClientAuthSession,
	_ClientOpcodeName_6[0:18]:       OpClientRealmSplit,
	_ClientOpcodeLowerName_6[0:18]:  OpClientRealmSplit,
	_ClientOpcodeName_7[0:32]:       OpClientReadyForAccountDataTimes,
	_ClientOpcodeLowerName_7[0:32]:  OpClientReadyForAccountDataTimes,
}

var _ClientOpcodeNames = []string{
	_ClientOpcodeName_0[0:18],
	_ClientOpcodeName_0[18:34],
	_ClientOpcodeName_0[34:52],
	_ClientOpcodeName_1[0:19],
	_ClientOpcodeName_2[0:14],
	_ClientOpcodeName_3[0:20],
	_ClientOpcodeName_4[0:12],
	_ClientOpcodeName_5[0:19],
	_ClientOpcodeName_6[0:18],
	_ClientOpcodeName_7[0:32],
}

// ClientOpcodeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ClientOpcodeString(s string) (ClientOpcode, error) {
	if val, ok := _ClientOpcodeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ClientOpcodeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ClientOpcode values", s)
}

// ClientOpcodeValues returns all values of the enum
func ClientOpcodeValues() []ClientOpcode {
	return _ClientOpcodeValues
}

// ClientOpcodeStrings returns a slice of all String values of the enum
func ClientOpcodeStrings() []string {
	strs := make([]string, len(_ClientOpcodeNames))
	copy(strs, _ClientOpcodeNames)
	return strs
}

// IsAClientOpcode returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ClientOpcode) IsAClientOpcode() bool {
	for _, v := range _ClientOpcodeValues {
		if i == v {
			return true
		}
	}
	return false
}

const _ServerOpcodeName = "OpServerCharCreateOpServerCharListOpServerCharDeleteOpServerCharLoginFailedOpServerLogoutOpServerLogoutCompleteOpServerLogoutCancelACKOpServerUpdateObjectOpServerPlayCinematicOpServerTutorialFlagsOpServerHearthLocationOpServerPongOpServerAuthChallengeOpServerAuthResponseOpServerAccountStorageTimesOpServerCharLoginVerifyWorldOpServerRealmSplitOpServerSystemFeatures"
const _ServerOpcodeLowerName = "opservercharcreateopservercharlistopserverchardeleteopservercharloginfailedopserverlogoutopserverlogoutcompleteopserverlogoutcancelackopserverupdateobjectopserverplaycinematicopservertutorialflagsopserverhearthlocationopserverpongopserverauthchallengeopserverauthresponseopserveraccountstoragetimesopservercharloginverifyworldopserverrealmsplitopserversystemfeatures"

var _ServerOpcodeMap = map[ServerOpcode]string{
	58:  _ServerOpcodeName[0:18],
	59:  _ServerOpcodeName[18:34],
	60:  _ServerOpcodeName[34:52],
	65:  _ServerOpcodeName[52:75],
	76:  _ServerOpcodeName[75:89],
	77:  _ServerOpcodeName[89:111],
	79:  _ServerOpcodeName[111:134],
	169: _ServerOpcodeName[134:154],
	250: _ServerOpcodeName[154:175],
	253: _ServerOpcodeName[175:196],
	341: _ServerOpcodeName[196:218],
	477: _ServerOpcodeName[218:230],
	492: _ServerOpcodeName[230:251],
	494: _ServerOpcodeName[251:271],
	521: _ServerOpcodeName[271:298],
	566: _ServerOpcodeName[298:326],
	907: _ServerOpcodeName[326:344],
	969: _ServerOpcodeName[344:366],
}

func (i ServerOpcode) String() string {
	if str, ok := _ServerOpcodeMap[i]; ok {
		return str
	}
	return fmt.Sprintf("ServerOpcode(%d)", i)
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ServerOpcodeNoOp() {
	var x [1]struct{}
	_ = x[OpServerCharCreate-(58)]
	_ = x[OpServerCharList-(59)]
	_ = x[OpServerCharDelete-(60)]
	_ = x[OpServerCharLoginFailed-(65)]
	_ = x[OpServerLogout-(76)]
	_ = x[OpServerLogoutComplete-(77)]
	_ = x[OpServerLogoutCancelACK-(79)]
	_ = x[OpServerUpdateObject-(169)]
	_ = x[OpServerPlayCinematic-(250)]
	_ = x[OpServerTutorialFlags-(253)]
	_ = x[OpServerHearthLocation-(341)]
	_ = x[OpServerPong-(477)]
	_ = x[OpServerAuthChallenge-(492)]
	_ = x[OpServerAuthResponse-(494)]
	_ = x[OpServerAccountStorageTimes-(521)]
	_ = x[OpServerCharLoginVerifyWorld-(566)]
	_ = x[OpServerRealmSplit-(907)]
	_ = x[OpServerSystemFeatures-(969)]
}

var _ServerOpcodeValues = []ServerOpcode{OpServerCharCreate, OpServerCharList, OpServerCharDelete, OpServerCharLoginFailed, OpServerLogout, OpServerLogoutComplete, OpServerLogoutCancelACK, OpServerUpdateObject, OpServerPlayCinematic, OpServerTutorialFlags, OpServerHearthLocation, OpServerPong, OpServerAuthChallenge, OpServerAuthResponse, OpServerAccountStorageTimes, OpServerCharLoginVerifyWorld, OpServerRealmSplit, OpServerSystemFeatures}

var _ServerOpcodeNameToValueMap = map[string]ServerOpcode{
	_ServerOpcodeName[0:18]:         OpServerCharCreate,
	_ServerOpcodeLowerName[0:18]:    OpServerCharCreate,
	_ServerOpcodeName[18:34]:        OpServerCharList,
	_ServerOpcodeLowerName[18:34]:   OpServerCharList,
	_ServerOpcodeName[34:52]:        OpServerCharDelete,
	_ServerOpcodeLowerName[34:52]:   OpServerCharDelete,
	_ServerOpcodeName[52:75]:        OpServerCharLoginFailed,
	_ServerOpcodeLowerName[52:75]:   OpServerCharLoginFailed,
	_ServerOpcodeName[75:89]:        OpServerLogout,
	_ServerOpcodeLowerName[75:89]:   OpServerLogout,
	_ServerOpcodeName[89:111]:       OpServerLogoutComplete,
	_ServerOpcodeLowerName[89:111]:  OpServerLogoutComplete,
	_ServerOpcodeName[111:134]:      OpServerLogoutCancelACK,
	_ServerOpcodeLowerName[111:134]: OpServerLogoutCancelACK,
	_ServerOpcodeName[134:154]:      OpServerUpdateObject,
	_ServerOpcodeLowerName[134:154]: OpServerUpdateObject,
	_ServerOpcodeName[154:175]:      OpServerPlayCinematic,
	_ServerOpcodeLowerName[154:175]: OpServerPlayCinematic,
	_ServerOpcodeName[175:196]:      OpServerTutorialFlags,
	_ServerOpcodeLowerName[175:196]: OpServerTutorialFlags,
	_ServerOpcodeName[196:218]:      OpServerHearthLocation,
	_ServerOpcodeLowerName[196:218]: OpServerHearthLocation,
	_ServerOpcodeName[218:230]:      OpServerPong,
	_ServerOpcodeLowerName[218:230]: OpServerPong,
	_ServerOpcodeName[230:251]:      OpServerAuthChallenge,
	_ServerOpcodeLowerName[230:251]: OpServerAuthChallenge,
	_ServerOpcodeName[251:271]:      OpServerAuthResponse,
	_ServerOpcodeLowerName[251:271]: OpServerAuthResponse,
	_ServerOpcodeName[271:298]:      OpServerAccountStorageTimes,
	_ServerOpcodeLowerName[271:298]: OpServerAccountStorageTimes,
	_ServerOpcodeName[298:326]:      OpServerCharLoginVerifyWorld,
	_ServerOpcodeLowerName[298:326]: OpServerCharLoginVerifyWorld,
	_ServerOpcodeName[326:344]:      OpServerRealmSplit,
	_ServerOpcodeLowerName[326:344]: OpServerRealmSplit,
	_ServerOpcodeName[344:366]:      OpServerSystemFeatures,
	_ServerOpcodeLowerName[344:366]: OpServerSystemFeatures,
}

var _ServerOpcodeNames = []string{
	_ServerOpcodeName[0:18],
	_ServerOpcodeName[18:34],
	_ServerOpcodeName[34:52],
	_ServerOpcodeName[52:75],
	_ServerOpcodeName[75:89],
	_ServerOpcodeName[89:111],
	_ServerOpcodeName[111:134],
	_ServerOpcodeName[134:154],
	_ServerOpcodeName[154:175],
	_ServerOpcodeName[175:196],
	_ServerOpcodeName[196:218],
	_ServerOpcodeName[218:230],
	_ServerOpcodeName[230:251],
	_ServerOpcodeName[251:271],
	_ServerOpcodeName[271:298],
	_ServerOpcodeName[298:326],
	_ServerOpcodeName[326:344],
	_ServerOpcodeName[344:366],
}

// ServerOpcodeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ServerOpcodeString(s string) (ServerOpcode, error) {
	if val, ok := _ServerOpcodeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ServerOpcodeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ServerOpcode values", s)
}

// ServerOpcodeValues returns all values of the enum
func ServerOpcodeValues() []ServerOpcode {
	return _ServerOpcodeValues
}

// ServerOpcodeStrings returns a slice of all String values of the enum
func ServerOpcodeStrings() []string {
	strs := make([]string, len(_ServerOpcodeNames))
	copy(strs, _ServerOpcodeNames)
	return strs
}

// IsAServerOpcode returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ServerOpcode) IsAServerOpcode() bool {
	_, ok := _ServerOpcodeMap[i]
	return ok
}
